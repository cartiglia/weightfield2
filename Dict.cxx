//
// File generated by rootcint at Thu Jun 26 10:21:14 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Carriers Carriers;
      #else
      class Carriers  {
         public:
         //friend XX;
         double x; //x position of carrier
         double y; //y position of carrier
         int inside; //if carrier inside detector, inside=1 ... if outside inside=0, if not yet created inside=-1
         double etheta; //lorentz angle of electrons
         double htheta; //lorentz angle of holes
         int charge; //-1= electron +1=hole
         double vx; //velocity along x axis
         double vy; //velocity along y axis
         bool egain; //if electron is a gain electron or not true=gain false=no gain
         double leftovergain; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void WFGUI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WFGUI(void *p);
   static void deleteArray_WFGUI(void *p);
   static void destruct_WFGUI(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WFGUI*)
   {
      ::WFGUI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WFGUI >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WFGUI", ::WFGUI::Class_Version(), "./WFGUI.h", 44,
                  typeid(::WFGUI), DefineBehavior(ptr, ptr),
                  &::WFGUI::Dictionary, isa_proxy, 4,
                  sizeof(::WFGUI) );
      instance.SetDelete(&delete_WFGUI);
      instance.SetDeleteArray(&deleteArray_WFGUI);
      instance.SetDestructor(&destruct_WFGUI);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WFGUI*)
   {
      return GenerateInitInstanceLocal((::WFGUI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WFGUI*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Potentials_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Potentials(void *p = 0);
   static void *newArray_Potentials(Long_t size, void *p);
   static void delete_Potentials(void *p);
   static void deleteArray_Potentials(void *p);
   static void destruct_Potentials(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Potentials*)
   {
      ::Potentials *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Potentials >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Potentials", ::Potentials::Class_Version(), "./Potentials.h", 26,
                  typeid(::Potentials), DefineBehavior(ptr, ptr),
                  &::Potentials::Dictionary, isa_proxy, 4,
                  sizeof(::Potentials) );
      instance.SetNew(&new_Potentials);
      instance.SetNewArray(&newArray_Potentials);
      instance.SetDelete(&delete_Potentials);
      instance.SetDeleteArray(&deleteArray_Potentials);
      instance.SetDestructor(&destruct_Potentials);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Potentials*)
   {
      return GenerateInitInstanceLocal((::Potentials*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Potentials*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Field_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Field(void *p = 0);
   static void *newArray_Field(Long_t size, void *p);
   static void delete_Field(void *p);
   static void deleteArray_Field(void *p);
   static void destruct_Field(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Field*)
   {
      ::Field *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Field >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Field", ::Field::Class_Version(), "./Field.h", 7,
                  typeid(::Field), DefineBehavior(ptr, ptr),
                  &::Field::Dictionary, isa_proxy, 4,
                  sizeof(::Field) );
      instance.SetNew(&new_Field);
      instance.SetNewArray(&newArray_Field);
      instance.SetDelete(&delete_Field);
      instance.SetDeleteArray(&deleteArray_Field);
      instance.SetDestructor(&destruct_Field);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Field*)
   {
      return GenerateInitInstanceLocal((::Field*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Field*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Carriers_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Carriers_Dictionary();
   static void *new_Carriers(void *p = 0);
   static void *newArray_Carriers(Long_t size, void *p);
   static void delete_Carriers(void *p);
   static void deleteArray_Carriers(void *p);
   static void destruct_Carriers(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Carriers*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Carriers) == sizeof(::ROOT::Shadow::Carriers));
      ::Carriers *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Carriers),0);
      static ::ROOT::TGenericClassInfo 
         instance("Carriers", "./Carriers.h", 32,
                  typeid(::Carriers), DefineBehavior(ptr, ptr),
                  &Carriers_ShowMembers, &Carriers_Dictionary, isa_proxy, 4,
                  sizeof(::Carriers) );
      instance.SetNew(&new_Carriers);
      instance.SetNewArray(&newArray_Carriers);
      instance.SetDelete(&delete_Carriers);
      instance.SetDeleteArray(&deleteArray_Carriers);
      instance.SetDestructor(&destruct_Carriers);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Carriers*)
   {
      return GenerateInitInstanceLocal((::Carriers*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Carriers*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Carriers_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Carriers*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
TClass *WFGUI::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WFGUI::Class_Name()
{
   return "WFGUI";
}

//______________________________________________________________________________
const char *WFGUI::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WFGUI*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WFGUI::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WFGUI*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WFGUI::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WFGUI*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WFGUI::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WFGUI*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Potentials::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Potentials::Class_Name()
{
   return "Potentials";
}

//______________________________________________________________________________
const char *Potentials::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Potentials*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Potentials::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Potentials*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Potentials::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Potentials*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Potentials::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Potentials*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Field::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Field::Class_Name()
{
   return "Field";
}

//______________________________________________________________________________
const char *Field::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Field*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Field::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Field*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Field::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Field*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Field::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Field*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Potentials::Streamer(TBuffer &R__b)
{
   // Stream an object of class Potentials.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Potentials::Class(),this);
   } else {
      R__b.WriteClassBuffer(Potentials::Class(),this);
   }
}

//______________________________________________________________________________
void Potentials::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Potentials.
      TClass *R__cl = ::Potentials::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XMAX", &XMAX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YMAX", &YMAX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pitch", &pitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width", &width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count", &count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vbias", &vbias);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vdepl", &vdepl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueXMAX", &TrueXMAX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueYMAX", &TrueYMAX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "poissonf", &poissonf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fix", &fix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ref", &ref);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wpot", &wpot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dpot", &dpot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strips", &strips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bulk", &bulk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multig", &multig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "finest", &finest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mipcharge", &mipcharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha_above", &alpha_above);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Potentials(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Potentials : new ::Potentials;
   }
   static void *newArray_Potentials(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Potentials[nElements] : new ::Potentials[nElements];
   }
   // Wrapper around operator delete
   static void delete_Potentials(void *p) {
      delete ((::Potentials*)p);
   }
   static void deleteArray_Potentials(void *p) {
      delete [] ((::Potentials*)p);
   }
   static void destruct_Potentials(void *p) {
      typedef ::Potentials current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Potentials

//______________________________________________________________________________
void Field::Streamer(TBuffer &R__b)
{
   // Stream an object of class Field.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Field::Class(),this);
   } else {
      R__b.WriteClassBuffer(Field::Class(),this);
   }
}

//______________________________________________________________________________
void Field::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Field.
      TClass *R__cl = ::Field::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "abs", &abs);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Field(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Field : new ::Field;
   }
   static void *newArray_Field(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Field[nElements] : new ::Field[nElements];
   }
   // Wrapper around operator delete
   static void delete_Field(void *p) {
      delete ((::Field*)p);
   }
   static void deleteArray_Field(void *p) {
      delete [] ((::Field*)p);
   }
   static void destruct_Field(void *p) {
      typedef ::Field current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Field

//______________________________________________________________________________
namespace ROOT {
   void Carriers_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Carriers.
      typedef ::ROOT::Shadow::Carriers ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Carriers*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &sobj->x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &sobj->y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inside", &sobj->inside);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etheta", &sobj->etheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "htheta", &sobj->htheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &sobj->charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &sobj->vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &sobj->vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "egain", &sobj->egain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leftovergain", &sobj->leftovergain);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Carriers(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Carriers : new ::Carriers;
   }
   static void *newArray_Carriers(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Carriers[nElements] : new ::Carriers[nElements];
   }
   // Wrapper around operator delete
   static void delete_Carriers(void *p) {
      delete ((::Carriers*)p);
   }
   static void deleteArray_Carriers(void *p) {
      delete [] ((::Carriers*)p);
   }
   static void destruct_Carriers(void *p) {
      typedef ::Carriers current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Carriers

//______________________________________________________________________________
void WFGUI::Streamer(TBuffer &R__b)
{
   // Stream an object of class WFGUI.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WFGUI::Class(),this);
   } else {
      R__b.WriteClassBuffer(WFGUI::Class(),this);
   }
}

//______________________________________________________________________________
void WFGUI::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WFGUI.
      TClass *R__cl = ::WFGUI::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plotupdate", &plotupdate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LessPlot", &LessPlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Less2DPlot", &Less2DPlot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stopped", &stopped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bfieldon", &bfieldon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diffusionon", &diffusionon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentson", &currentson);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fieldyes", &fieldyes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gainon", &gainon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OscOn", &OscOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FileNameOn", &FileNameOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BatchOn", &BatchOn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ConstQFlag", &ConstQFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UniformQFlag", &UniformQFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UserUniformQFlag", &UserUniformQFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripdoping", &stripdoping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bulkdoping", &bulkdoping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetType", &DetType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "carriersin", &carriersin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ygain", &ygain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GainRatio", &GainRatio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GainIndent", &GainIndent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Temp", &Temp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimMaxCarriers", &dimMaxCarriers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Precision", &Precision);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AlphaRange", &AlphaRange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OscBW", &OscBW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EvNumber", &EvNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ThisEvent", &ThisEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angle", &angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TFall", &TFall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SWidth", &SWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TRise", &TRise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vth", &Vth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Jitter", &Jitter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TVth", &TVth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FJitter", &FJitter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FTVth", &FTVth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fileName", (void*)&fileName);
      R__insp.InspectMember("string", (void*)&fileName, "fileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "radiobuttonstatus", &radiobuttonstatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*driftcanvas", &driftcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*driftpcanvas", &driftpcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weightcanvas", &weightcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weightpcanvas", &weightpcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*driftfcanvas", &driftfcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weightfcanvas", &weightfcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*currentscanvas", &currentscanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oscilloscopecanvas", &oscilloscopecanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PotentialTab", &PotentialTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DriftPTab", &DriftPTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WeightingPTab", &WeightingPTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsTab", &CurrentsTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OscilloscopeTab", &OscilloscopeTab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SettingsGlobalFrame", &SettingsGlobalFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SettingsFrame", &SettingsFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SettingsFrame2", &SettingsFrame2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SettingsFrame3", &SettingsFrame3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NameFrame", &NameFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BatchFrame", &BatchFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ControlFrame", &ControlFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RightFrame", &RightFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ParticlesPropertiesFrame", &ParticlesPropertiesFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DetectorPropertiesFrame", &DetectorPropertiesFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ElectronicsFrame", &ElectronicsFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ExitFrame", &ExitFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ParticlesPropertiesFrame1", &ParticlesPropertiesFrame1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChargeCollectionFrame", &ChargeCollectionFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LorentzInfoFrame", &LorentzInfoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DimensionsFrame", &DimensionsFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VoltageFrame", &VoltageFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsFrame", &CurrentsFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PlotGroupFrame", &PlotGroupFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SelectPartFrame", &SelectPartFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OscilloscopeFrame", &OscilloscopeFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DimSetFrame", &DimSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DimLabelFrame", &DimLabelFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VolSetFrame", &VolSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VolLabelFrame", &VolLabelFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TypeFrameGroup", &TypeFrameGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TypeButtonGroup", &TypeButtonGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DopButtonGroup", &DopButtonGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PartButtonGroup", &PartButtonGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ButtonPotFrame", &ButtonPotFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ButtonCurFrame", &ButtonCurFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpdateFrame", &UpdateFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DriftPTabFrame", &DriftPTabFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WeightPTabFrame", &WeightPTabFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LabelsTabFrame", &LabelsTabFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LabelsTabFrame2", &LabelsTabFrame2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsLabelFrame", &CurrentsLabelFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CarriersInFrame", &CarriersInFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChargeLabelFrame1", &ChargeLabelFrame1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChargeLabelFrame2", &ChargeLabelFrame2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChargeLabelFrame3", &ChargeLabelFrame3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsInfoFrame", &CurrentsInfoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TempSetFrame", &TempSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*AlphaRangeFrame", &AlphaRangeFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PrecisionFrame", &PrecisionFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OscBWSetFrame", &OscBWSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TFallSetFrame", &TFallSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VthSetFrame", &VthSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TRiseSetFrame", &TRiseSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BatchEventSetFrame", &BatchEventSetFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DopBulkFrame", &DopBulkFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DopStripFrame", &DopStripFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XMAXentry", &XMAXentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*YMAXentry", &YMAXentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Pitchentry", &Pitchentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Widthentry", &Widthentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Gainentry", &Gainentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainRatioentry", &GainRatioentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainIndententry", &GainIndententry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Biasentry", &Biasentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Depletionentry", &Depletionentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PlotUpdateEntry", &PlotUpdateEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LessPlotEntry", &LessPlotEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Less2DPlotEntry", &Less2DPlotEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BfieldEntry", &BfieldEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TempEntry", &TempEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WhereCut", &WhereCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WhereCut2", &WhereCut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CarriersInNumberentry", &CarriersInNumberentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CarriersAngleNumberentry", &CarriersAngleNumberentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Chargeentry", &Chargeentry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RangeEntry", &RangeEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PrecisionEntry", &PrecisionEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OscBWEntry", &OscBWEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TFallEntry", &TFallEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VthEntry", &VthEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TRiseEntry", &TRiseEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EventsEntry", &EventsEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TypeButton[3]", &TypeButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BulkButton[2]", &BulkButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StripButton[2]", &StripButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SelectPartButton[6]", &SelectPartButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsButton[2]", &CurrentsButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Eyes", &Eyes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpdatePlotCheck", &UpdatePlotCheck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LessPlotCheck", &LessPlotCheck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Less2DPlotCheck", &Less2DPlotCheck);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OscOnButton", &OscOnButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FileNameOnButton", &FileNameOnButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BatchOnButton", &BatchOnButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XMAXLabel", &XMAXLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*YMAXLabel", &YMAXLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PitchLabel", &PitchLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WidthLabel", &WidthLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainLabel", &GainLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainRatioLabel", &GainRatioLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainIndentLabel", &GainIndentLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BiasLabel", &BiasLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DepletionLabel", &DepletionLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QELabel", &QELabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QHLabel", &QHLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QEHLabel", &QEHLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QEGLabel", &QEGLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QHGLabel", &QHGLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QEHGLabel", &QEHGLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QETotLabel", &QETotLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QHTotLabel", &QHTotLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QTotLabel", &QTotLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PlotUpdateLabel", &PlotUpdateLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LessPlotLabel", &LessPlotLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Less2DPlotLabel", &Less2DPlotLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BulkLabel", &BulkLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StripLabel", &StripLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QHTextLabel", &QHTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QETextLabel", &QETextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QEHTextLabel", &QEHTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QHGTextLabel", &QHGTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QEGTextLabel", &QEGTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QEHGTextLabel", &QEHGTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QETotTextLabel", &QETotTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QHTotTextLabel", &QHTotTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QTotTextLabel", &QTotTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LorentzhTextLabel", &LorentzhTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LorentzeTextLabel", &LorentzeTextLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LorentzeLabel", &LorentzeLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LorentzhLabel", &LorentzhLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalculatingLabel", &CalculatingLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalculatingLabel2", &CalculatingLabel2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DriftCutLabel", &DriftCutLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WeightingCutLabel", &WeightingCutLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FieldLabel", &FieldLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FieldLabel2", &FieldLabel2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ElectronsLabel", &ElectronsLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HolesLabel", &HolesLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainElectronsLabel", &GainElectronsLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GainHolesLabel", &GainHolesLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TotalLabel", &TotalLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CarriersInLabel", &CarriersInLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CarriersAngleLabel", &CarriersAngleLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TempLabel", &TempLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RangeLabel", &RangeLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PrecisionLabel", &PrecisionLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OscBWLabel", &OscBWLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TRiseLabel", &TRiseLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TFallLabel", &TFallLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VthLabel", &VthLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EventsLabel", &EventsLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalculateButton", &CalculateButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SaveButton", &SaveButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SetButton", &SetButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StopButton", &StopButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ExitButton", &ExitButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BetweenStripsButton", &BetweenStripsButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BetweenStripsButton2", &BetweenStripsButton2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnStripsButton", &OnStripsButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OnStripsButton2", &OnStripsButton2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ExButton", &ExButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EyButton", &EyButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ExButton2", &ExButton2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EyButton2", &EyButton2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalcPotButton", &CalcPotButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DrawCutsUserEntry", &DrawCutsUserEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DrawCutsUserEntry2", &DrawCutsUserEntry2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FileNameButton", &FileNameButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FileNameEntry", &FileNameEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SetAlpha", &SetAlpha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSliceExtentL", &fSliceExtentL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSliceLengthUnit", &fSliceLengthUnit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSliceExtentLLabel", &fSliceExtentLLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dwpot", &dwpot);
      R__insp.InspectMember(dwpot, "dwpot.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wf", &wf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*df", &df);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*carriers", &carriers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvasp", &canvasp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvaspc", &canvaspc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvasw", &canvasw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvaswc", &canvaswc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*curcanvas", &curcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*osccanvas", &osccanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wfhist", &wfhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfhist", &dfhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*jhist", &jhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tvthhist", &tvthhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*twtothist", &twtothist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PotentialThread", &PotentialThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsThread", &CurrentsThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dhist", &dhist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*whist", &whist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NLine1", &NLine1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NLine2", &NLine2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ellipse", &ellipse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CurrentsProgressBar", &CurrentsProgressBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "B", &B);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wherecut", &wherecut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wherecut2", &wherecut2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*driftcut", &driftcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*weightcut", &weightcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfieldcut", &dfieldcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wfieldcut", &wfieldcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfieldxcut", &dfieldxcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wfieldxcut", &wfieldxcut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dfieldycut", &dfieldycut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*wfieldycut", &wfieldycut);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WFGUI(void *p) {
      delete ((::WFGUI*)p);
   }
   static void deleteArray_WFGUI(void *p) {
      delete [] ((::WFGUI*)p);
   }
   static void destruct_WFGUI(void *p) {
      typedef ::WFGUI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WFGUI

/********************************************************
* Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("WFGUI.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* WFGUI */
static int G__Dict_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WFGUI* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WFGUI(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) WFGUI(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_WFGUI));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->CallSetDetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->CallGetDetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallCalculatePotentials();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallSetDoping0();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallSetDoping1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallSetPart();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->CallSetAlpha());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallBoundaryConditions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallCalculateFields();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->CallCalculateCurrents();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->Getwhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->Getdhist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->Getcanvasp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->Getcanvasw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->Getcurcanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->Getosccanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->FillHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawFieldHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetNLine1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetNLine2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetEllipse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) WFGUI::StartPotentialCalcTh((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->ThreadstartPotential());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->ThreadstopPotential());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 89, (long) WFGUI::StartCurrentsCalcTh((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->ThreadstartCurrents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->ThreadstopCurrents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->Getstopped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->Setstopped((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->SetStopOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetPotentialThread());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->KillPotentialThread();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->Getplotupdate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetLessPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetLess2DPlot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetPlotUpdate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetBField((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetLessPlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetLess2DPlot((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetDiffusion((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetPlotFieldHist((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetCalculatingLabel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetCalculatingLabel2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawCutGraph((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawAllGraph((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawFieldsAbs((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetCutOnStrips();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawAll();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawAllw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetCutBetweenStrips();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawFieldsAbsX();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->DrawFieldsAbsY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->Getdiffusionon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetProgressBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetQLabel(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (const char*) G__int(libp->para[6]), (const char*) G__int(libp->para[7])
, (const char*) G__int(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetAngleLabel((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetGainon((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetGainon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetYGain((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetGainRatio((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetAllButton((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetYGain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetGainRatio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->GetDimMaxCarriers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetYMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetXMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetChargeEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetFileName((string*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WFGUI*) G__getstructoffset())->CallSetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetAlphaRange((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetPrecision((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetAlphaRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->GetPrecision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetConstQFlag((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetConstQFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetUniformQFlag((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetUserUniformQFlag((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetUniformQFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetUserUniformQFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetOscBW((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetOscBW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetTRise((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetTRise());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetTFall((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetTFall());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetVth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetTVth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetTVth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetJitter((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetJitter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetFTVth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetFTVth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetFJitter((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetFJitter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetSWidth((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetSWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetOscOn((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetOscOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetFileNameOn((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetFileNameOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetBatchOn((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WFGUI*) G__getstructoffset())->GetBatchOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetEvNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->GetEvNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->SetEvent((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WFGUI*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WFGUI*) G__getstructoffset())->Getygainlow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WFGUI*) G__getstructoffset())->Getygainhigh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WFGUI*) G__getstructoffset())->GetAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WFGUI::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WFGUI::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WFGUI::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WFGUI::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WFGUI*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WFGUI::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WFGUI::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WFGUI::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WFGUI::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WFGUI G__TWFGUI;
static int G__Dict_473_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WFGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WFGUI*) (soff+(sizeof(WFGUI)*i)))->~G__TWFGUI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WFGUI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WFGUI*) (soff))->~G__TWFGUI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Potentials */
static int G__Dict_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Potentials* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Potentials[n];
     } else {
       p = new((void*) gvp) Potentials[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Potentials;
     } else {
       p = new((void*) gvp) Potentials;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Potentials));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Potentials* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Potentials(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) Potentials(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Potentials));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Potentials* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Potentials((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Potentials((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Potentials));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetV((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetwPotential((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetdPotential((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetPitchWidthXY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Potentials*) G__getstructoffset())->Getdpot((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Potentials*) G__getstructoffset())->Getwpot((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Potentials*) G__getstructoffset())->Getfix((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Potentials*) G__getstructoffset())->GetXMAX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Potentials*) G__getstructoffset())->GetYMAX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Potentials*) G__getstructoffset())->Getref());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Potentials*) G__getstructoffset())->Getmipcharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->Setmipcharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Potentials*) G__getstructoffset())->Getvbias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Potentials*) G__getstructoffset())->Getpitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetBoundaryConditions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->Restriktor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((Potentials*) G__getstructoffset())->FixRestriktor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->Prolongation();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->Iteration((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->Multigrid((void*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->DriftPal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->WeightPal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetDoping((unsigned char) G__int(libp->para[0]), (unsigned char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((Potentials*) G__getstructoffset())->GetDoping());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->SetAbove((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Potentials*) G__getstructoffset())->GetAbove());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Potentials::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Potentials::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Potentials::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Potentials::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Potentials*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Potentials*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Potentials::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Potentials::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Potentials::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_474_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Potentials::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_474_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Potentials* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Potentials(*(Potentials*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Potentials));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Potentials G__TPotentials;
static int G__Dict_474_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Potentials*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Potentials*) (soff+(sizeof(Potentials)*i)))->~G__TPotentials();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Potentials*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Potentials*) (soff))->~G__TPotentials();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_474_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Potentials* dest = (Potentials*) G__getstructoffset();
   *dest = *(Potentials*) libp->para[0].ref;
   const Potentials& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Field */
static int G__Dict_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Field* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Field[n];
     } else {
       p = new((void*) gvp) Field[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Field;
     } else {
       p = new((void*) gvp) Field;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Field));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Field*) G__getstructoffset())->GetFieldx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Field*) G__getstructoffset())->GetFieldy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Field*) G__getstructoffset())->Getabs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Field*) G__getstructoffset())->Setabs((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Field*) G__getstructoffset())->SetField((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Field::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Field::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Field::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Field::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Field*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Field*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Field*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Field*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Field::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Field::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Field::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_475_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Field::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_475_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Field* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Field(*(Field*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Field));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Field G__TField;
static int G__Dict_475_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Field*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Field*) (soff+(sizeof(Field)*i)))->~G__TField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Field*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Field*) (soff))->~G__TField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_475_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Field* dest = (Field*) G__getstructoffset();
   *dest = *(Field*) libp->para[0].ref;
   const Field& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Carriers */
static int G__Dict_476_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Carriers* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Carriers[n];
     } else {
       p = new((void*) gvp) Carriers[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Carriers;
     } else {
       p = new((void*) gvp) Carriers;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Carriers));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->Getx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->Gety());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->Setx((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->Sety((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->Setinside((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Carriers*) G__getstructoffset())->Getinside());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->Setetheta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->Seththeta((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->Getetheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->Geththeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->SetGainPart((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Carriers*) G__getstructoffset())->GetGainPart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->SetCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Carriers*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->SetVx((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->SetVy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->GetVx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->GetVy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Carriers*) G__getstructoffset())->SetLeftovergain((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_476_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Carriers*) G__getstructoffset())->GetLeftovergain());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_476_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Carriers* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Carriers(*(Carriers*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_Carriers));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Carriers G__TCarriers;
static int G__Dict_476_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Carriers*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Carriers*) (soff+(sizeof(Carriers)*i)))->~G__TCarriers();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Carriers*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Carriers*) (soff))->~G__TCarriers();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_476_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Carriers* dest = (Carriers*) G__getstructoffset();
   *dest = *(Carriers*) libp->para[0].ref;
   const Carriers& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* WFGUI */

/* Potentials */

/* Field */

/* Carriers */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_WFGUI))) {
     WFGUI *G__Lderived;
     G__Lderived=(WFGUI*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_WFGUI),G__get_linked_tagnum(&G__DictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* WFGUI */
static void G__setup_memvarWFGUI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_WFGUI));
   { WFGUI *p; p=(WFGUI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"plotupdate=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"LessPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"Less2DPlot=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"stopped=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"bfieldon=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"diffusionon=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"currentson=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fieldyes=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"gainon=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"OscOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FileNameOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"BatchOn=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"ConstQFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"UniformQFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"UserUniformQFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"stripdoping=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"bulkdoping=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"DetType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"carriersin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ygain=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"GainRatio=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"GainIndent=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Temp=",0,"temperature");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"dimMaxCarriers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Precision=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"AlphaRange=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"OscBW=",0,"oscilloscope bandwidth");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EvNumber=",0,"total number of events");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ThisEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TFall=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"SWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TRise=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Vth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"Jitter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TVth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"FJitter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"FTVth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"fileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DictLN_ParticleRadioButtonStatus_enum),G__defined_typename("ParticleRadioButtonStatus"),-1,4,"radiobuttonstatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"driftcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"driftpcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"weightcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"weightpcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"driftfcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"weightfcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"currentscanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TRootEmbeddedCanvas),-1,-1,4,"oscilloscopecanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTab),-1,-1,4,"PotentialTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"DriftPTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"WeightingPTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"CurrentsTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCompositeFrame),-1,-1,4,"OscilloscopeTab=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"SettingsGlobalFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"SettingsFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"SettingsFrame2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"SettingsFrame3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"NameFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"BatchFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"ControlFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"RightFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"ParticlesPropertiesFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"DetectorPropertiesFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"ElectronicsFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"ExitFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"ParticlesPropertiesFrame1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"ChargeCollectionFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"LorentzInfoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"DimensionsFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"VoltageFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"CurrentsFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"PlotGroupFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGGroupFrame),-1,-1,4,"SelectPartFrame=",0,"!!!!!!!!!!!!!!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"OscilloscopeFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"DimSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"DimLabelFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"VolSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"VolLabelFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGButtonGroup),-1,-1,4,"TypeFrameGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGButtonGroup),-1,-1,4,"TypeButtonGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGButtonGroup),-1,-1,4,"DopButtonGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGButtonGroup),-1,-1,4,"PartButtonGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"ButtonPotFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"ButtonCurFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"UpdateFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"DriftPTabFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"WeightPTabFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"LabelsTabFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"LabelsTabFrame2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"CurrentsLabelFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"CarriersInFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"ChargeLabelFrame1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"ChargeLabelFrame2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"ChargeLabelFrame3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGVerticalFrame),-1,-1,4,"CurrentsInfoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"TempSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"AlphaRangeFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"PrecisionFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"OscBWSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"TFallSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"VthSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"TRiseSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"BatchEventSetFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGButtonGroup),-1,-1,4,"DopBulkFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGButtonGroup),-1,-1,4,"DopStripFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"XMAXentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"YMAXentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Pitchentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Widthentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Gainentry=",0,"!!!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"GainRatioentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"GainIndententry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Biasentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Depletionentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"PlotUpdateEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"LessPlotEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Less2DPlotEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"BfieldEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"TempEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"WhereCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"WhereCut2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"CarriersInNumberentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"CarriersAngleNumberentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"Chargeentry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"RangeEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"PrecisionEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"OscBWEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"TFallEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"VthEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"TRiseEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGNumberEntry),-1,-1,4,"EventsEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGRadioButton),-1,-1,4,"TypeButton[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGRadioButton),-1,-1,4,"BulkButton[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGRadioButton),-1,-1,4,"StripButton[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGRadioButton),-1,-1,4,"SelectPartButton[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"CurrentsButton[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"Eyes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"UpdatePlotCheck=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"LessPlotCheck=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"Less2DPlotCheck=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"OscOnButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"FileNameOnButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGCheckButton),-1,-1,4,"BatchOnButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"XMAXLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"YMAXLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"PitchLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"WidthLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"GainLabel=",0,"!!!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"GainRatioLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"GainIndentLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"BiasLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"DepletionLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QELabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QHLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QEHLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QEGLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QHGLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QEHGLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QETotLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QHTotLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QTotLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"PlotUpdateLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"LessPlotLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"Less2DPlotLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"BulkLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"StripLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QHTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QETextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QEHTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QHGTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QEGTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QEHGTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QETotTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QHTotTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"QTotTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"LorentzhTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"LorentzeTextLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"LorentzeLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"LorentzhLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"CalculatingLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"CalculatingLabel2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"DriftCutLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"WeightingCutLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"FieldLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"FieldLabel2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"ElectronsLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"HolesLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"GainElectronsLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"GainHolesLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"TotalLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"CarriersInLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"CarriersAngleLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"TempLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"RangeLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"PrecisionLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"OscBWLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"TRiseLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"TFallLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"VthLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"EventsLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"CalculateButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"SaveButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"SetButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"StopButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"ExitButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"BetweenStripsButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"BetweenStripsButton2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"OnStripsButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"OnStripsButton2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"ExButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"EyButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"ExButton2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"EyButton2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"CalcPotButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"DrawCutsUserEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"DrawCutsUserEntry2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextButton),-1,-1,4,"FileNameButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGTextEntry),-1,-1,4,"FileNameEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGComboBox),-1,-1,4,"SetAlpha=",0,"!!!!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHorizontalFrame),-1,-1,4,"fSliceExtentL=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGComboBox),-1,-1,4,"fSliceLengthUnit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGLabel),-1,-1,4,"fSliceExtentLLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_Potentials),-1,-1,4,"dwpot=",0,"potentials");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__DictLN_Field),-1,-1,4,"wf=",0,"weighting field");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__DictLN_Field),-1,-1,4,"df=",0,"drift field");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_Carriers),-1,-1,4,"carriers=",0,"carriers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"canvasp=",0,"canvas for drift potential histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"canvaspc=",0,"canvas for drift potential cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"canvasw=",0,"canvas for weighting potential histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"canvaswc=",0,"canvas for weighting potential cuts");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"curcanvas=",0,"canvas for currents");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TCanvas),-1,-1,4,"osccanvas=",0,"canvas for oscilloscope output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2F),-1,-1,4,"wfhist=",0,"wfhist = weighting field histogram, dfhit = drift potentials histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2F),-1,-1,4,"dfhist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"jhist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"tvthhist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2F),-1,-1,4,"twtothist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TThread),-1,-1,4,"PotentialThread=",0,"thread for calculation of potentials");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TThread),-1,-1,4,"CurrentsThread=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2F),-1,-1,4,"dhist=",0,"histograms:");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH2F),-1,-1,4,"whist=",0,"dhist = drift potentials histogram, whist = weighting potentials histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLine),-1,-1,4,"NLine1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TLine),-1,-1,4,"NLine2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TEllipse),-1,-1,4,"ellipse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TGHProgressBar),-1,-1,4,"CurrentsProgressBar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->B)-(long)(p)),100,0,0,-1,-1,-1,1,"B=",0,"magnetic field");
   G__memvar_setup((void*)((long)(&p->wherecut)-(long)(p)),105,0,0,-1,-1,-1,1,"wherecut=",0,"draw drift potential cut where? (x coordinate)");
   G__memvar_setup((void*)((long)(&p->wherecut2)-(long)(p)),105,0,0,-1,-1,-1,1,"wherecut2=",0,"draw weighting potential cut where?");
   G__memvar_setup((void*)((long)(&p->driftcut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"driftcut=",0,"graph for drift potential cut");
   G__memvar_setup((void*)((long)(&p->weightcut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"weightcut=",0,"graph for weighting potential cut");
   G__memvar_setup((void*)((long)(&p->dfieldcut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"dfieldcut=",0,"graph for drift field cut");
   G__memvar_setup((void*)((long)(&p->wfieldcut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"wfieldcut=",0,"graph for weighting potential cut");
   G__memvar_setup((void*)((long)(&p->dfieldxcut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"dfieldxcut=",0,"graph for drift field cut");
   G__memvar_setup((void*)((long)(&p->wfieldxcut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"wfieldxcut=",0,"graph for weighting potential cut");
   G__memvar_setup((void*)((long)(&p->dfieldycut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"dfieldycut=",0,"graph for drift field cut");
   G__memvar_setup((void*)((long)(&p->wfieldycut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictLN_TGraph),-1,-1,1,"wfieldycut=",0,"graph for weighting potential cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Potentials */
static void G__setup_memvarPotentials(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_Potentials));
   { Potentials *p; p=(Potentials*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"XMAX=",0,"detector width");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"YMAX=",0,"detector height");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pitch=",0,"Pitch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"width=",0,"strip width");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count=",0,"number of strips");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vbias=",0,"bias voltage");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vdepl=",0,"depletion voltage");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrueXMAX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"TrueYMAX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"poissonf=",0,"right side of Poisson equation");
   G__memvar_setup((void*)0,73,2,0,-1,-1,-1,4,"fix=",0,"ag for fixed potentials [electrodes]: 1=normal electrode, 2=readout electrode, 0=everywhere else");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ref=",0,"ref=0: finest grid, ref=1: 1. coarser grid, ref=2: 2. coarser grid");
   G__memvar_setup((void*)0,68,2,0,-1,-1,-1,4,"wpot=",0,"weighting potential");
   G__memvar_setup((void*)0,68,2,0,-1,-1,-1,4,"dpot=",0,"drift potential");
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"strips=",0,"doping of strips");
   G__memvar_setup((void*)0,98,0,0,-1,-1,-1,4,"bulk=",0,"doping of bulk");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"multig=",0,"number of grids");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"finest=",0,"reference parameter to finest grid (finest = XMAX of finest grid)");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mipcharge=",0,"number of electrons/holes created");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"alpha_above=",0,"if alpha particle comes from above or not");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Field */
static void G__setup_memvarField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_Field));
   { Field *p; p=(Field*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"abs=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Carriers */
static void G__setup_memvarCarriers(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_Carriers));
   { Carriers *p; p=(Carriers*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x=",0,"x position of carrier");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"y=",0,"y position of carrier");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"inside=",0,"if carrier inside detector, inside=1 ... if outside inside=0, if not yet created inside=-1");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"etheta=",0,"lorentz angle of electrons");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"htheta=",0,"lorentz angle of holes");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"charge=",0,"-1= electron +1=hole");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vx=",0,"velocity along x axis");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vy=",0,"velocity along y axis");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"egain=",0,"if electron is a gain electron or not true=gain false=no gain");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"leftovergain=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncWFGUI(void) {
   /* WFGUI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_WFGUI));
   G__memfunc_setup("WFGUI",386,G__Dict_473_0_1, 105, G__get_linked_tagnum(&G__DictLN_WFGUI), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", "constructor of GUI", (void*) NULL, 0);
   G__memfunc_setup("CallSetDetType",1383,G__Dict_473_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CallGetDetType",1371,G__Dict_473_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CallCalculatePotentials",2349,G__Dict_473_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to Calculate Potentials", (void*) NULL, 0);
   G__memfunc_setup("CallSetDoping0",1337,G__Dict_473_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to set bulk n-type, strips p-type", (void*) NULL, 0);
   G__memfunc_setup("CallSetDoping1",1338,G__Dict_473_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to set bulk p-type, strips n-type", (void*) NULL, 0);
   G__memfunc_setup("CallSetPart",1087,G__Dict_473_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "!!!!!!", (void*) NULL, 0);
   G__memfunc_setup("CallSetAlpha",1166,G__Dict_473_0_8, 103, -1, -1, 0, 0, 1, 1, 0, "", "!!!!!!", (void*) NULL, 0);
   G__memfunc_setup("CallBoundaryConditions",2266,G__Dict_473_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to set boundary conditions", (void*) NULL, 0);
   G__memfunc_setup("CallCalculateFields",1889,G__Dict_473_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to calculate fields", (void*) NULL, 0);
   G__memfunc_setup("CallCalculateCurrents",2144,G__Dict_473_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to calculate currents", (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "Method to close window", (void*) NULL, 1);
   G__memfunc_setup("Getwhist",847,G__Dict_473_0_13, 85, G__get_linked_tagnum(&G__DictLN_TH2F), -1, 0, 0, 1, 1, 0, "", "Method which returns whist", (void*) NULL, 0);
   G__memfunc_setup("Getdhist",828,G__Dict_473_0_14, 85, G__get_linked_tagnum(&G__DictLN_TH2F), -1, 0, 0, 1, 1, 0, "", "Method which returns dhist ", (void*) NULL, 0);
   G__memfunc_setup("Getcanvasp",1036,G__Dict_473_0_15, 85, G__get_linked_tagnum(&G__DictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", "Method which returns canvasp", (void*) NULL, 0);
   G__memfunc_setup("Getcanvasw",1043,G__Dict_473_0_16, 85, G__get_linked_tagnum(&G__DictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", "Method which returns canvasw", (void*) NULL, 0);
   G__memfunc_setup("Getcurcanvas",1254,G__Dict_473_0_17, 85, G__get_linked_tagnum(&G__DictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", "Method which returns curcanvas", (void*) NULL, 0);
   G__memfunc_setup("Getosccanvas",1249,G__Dict_473_0_18, 85, G__get_linked_tagnum(&G__DictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", "Method which returns osccanvas", (void*) NULL, 0);
   G__memfunc_setup("FillHist",799,G__Dict_473_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to draw histograms of drift and weighting potential", (void*) NULL, 0);
   G__memfunc_setup("DrawFieldHist",1290,G__Dict_473_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", "Method to draw field histogram", (void*) NULL, 0);
   G__memfunc_setup("GetNLine1",807,G__Dict_473_0_21, 85, G__get_linked_tagnum(&G__DictLN_TLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNLine2",808,G__Dict_473_0_22, 85, G__get_linked_tagnum(&G__DictLN_TLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEllipse",1006,G__Dict_473_0_23, 85, G__get_linked_tagnum(&G__DictLN_TEllipse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartPotentialCalcTh",2029,G__Dict_473_0_24, 89, -1, -1, 0, 1, 3, 1, 0, "Y - - 0 - -", (char*)NULL, (void*) G__func2void( (void* (*)(void*))(&WFGUI::StartPotentialCalcTh) ), 0);
   G__memfunc_setup("ThreadstartPotential",2102,G__Dict_473_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ThreadstopPotential",1998,G__Dict_473_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StartCurrentsCalcTh",1939,G__Dict_473_0_27, 89, -1, -1, 0, 1, 3, 1, 0, "Y - - 0 - -", (char*)NULL, (void*) G__func2void( (void* (*)(void*))(&WFGUI::StartCurrentsCalcTh) ), 0);
   G__memfunc_setup("ThreadstartCurrents",2012,G__Dict_473_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ThreadstopCurrents",1908,G__Dict_473_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Getstopped",1055,G__Dict_473_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setstopped",1067,G__Dict_473_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStopOn",911,G__Dict_473_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPotentialThread",1832,G__Dict_473_0_33, 85, G__get_linked_tagnum(&G__DictLN_TThread), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KillPotentialThread",1940,G__Dict_473_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getplotupdate",1378,G__Dict_473_0_35, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLessPlot",1110,G__Dict_473_0_36, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLess2DPlot",1228,G__Dict_473_0_37, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlotUpdate",1326,G__Dict_473_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBField",850,G__Dict_473_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLessPlot",1122,G__Dict_473_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLess2DPlot",1240,G__Dict_473_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiffusion",1235,G__Dict_473_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlotFieldHist",1607,G__Dict_473_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalculatingLabel",1895,G__Dict_473_0_44, 85, G__get_linked_tagnum(&G__DictLN_TGLabel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalculatingLabel2",1945,G__Dict_473_0_45, 85, G__get_linked_tagnum(&G__DictLN_TGLabel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCutGraph",1196,G__Dict_473_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAllGraph",1177,G__Dict_473_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFieldsAbs",1275,G__Dict_473_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutOnStrips",1434,G__Dict_473_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAll",679,G__Dict_473_0_50, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAllw",798,G__Dict_473_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCutBetweenStrips",1959,G__Dict_473_0_52, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFieldsAbsX",1363,G__Dict_473_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFieldsAbsY",1364,G__Dict_473_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getdiffusionon",1476,G__Dict_473_0_55, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProgressBar",1418,G__Dict_473_0_56, 85, G__get_linked_tagnum(&G__DictLN_TGHProgressBar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetB",354,G__Dict_473_0_57, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__Dict_473_0_58, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQLabel",861,G__Dict_473_0_59, 121, -1, -1, 0, 9, 1, 1, 0, 
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"C - - 10 - - C - - 10 - - "
"C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAngleLabel",1267,G__Dict_473_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - - C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGainon",904,G__Dict_473_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", "sets gain layer active", (void*) NULL, 0);
   G__memfunc_setup("GetGainon",892,G__Dict_473_0_62, 103, -1, -1, 0, 0, 1, 1, 0, "", "returns if gain layer is active", (void*) NULL, 0);
   G__memfunc_setup("SetYGain",772,G__Dict_473_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGainRatio",1194,G__Dict_473_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAllButton",1217,G__Dict_473_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYGain",760,G__Dict_473_0_66, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGainRatio",1182,G__Dict_473_0_67, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDimMaxCarriers",1691,G__Dict_473_0_68, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYMax",671,G__Dict_473_0_69, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXMax",670,G__Dict_473_0_70, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChargeEntry",1404,G__Dict_473_0_71, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileName",1069,G__Dict_473_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "U 'string' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__Dict_473_0_73, 85, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CallSetFileName",1449,G__Dict_473_0_74, 85, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlphaRange",1279,G__Dict_473_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrecision",1240,G__Dict_473_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlphaRange",1267,G__Dict_473_0_77, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrecision",1228,G__Dict_473_0_78, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConstQFlag",1278,G__Dict_473_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConstQFlag",1266,G__Dict_473_0_80, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUniformQFlag",1495,G__Dict_473_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUserUniformQFlag",1910,G__Dict_473_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUniformQFlag",1483,G__Dict_473_0_83, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUserUniformQFlag",1898,G__Dict_473_0_84, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOscBW",746,G__Dict_473_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOscBW",734,G__Dict_473_0_86, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTRise",787,G__Dict_473_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTRise",775,G__Dict_473_0_88, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTFall",767,G__Dict_473_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTFall",755,G__Dict_473_0_90, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVth",594,G__Dict_473_0_91, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTVth",690,G__Dict_473_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTVth",678,G__Dict_473_0_93, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJitter",926,G__Dict_473_0_94, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJitter",914,G__Dict_473_0_95, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFTVth",760,G__Dict_473_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFTVth",748,G__Dict_473_0_97, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFJitter",996,G__Dict_473_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFJitter",984,G__Dict_473_0_99, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSWidth",895,G__Dict_473_0_100, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSWidth",883,G__Dict_473_0_101, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOscOn",782,G__Dict_473_0_102, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOscOn",770,G__Dict_473_0_103, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileNameOn",1258,G__Dict_473_0_104, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileNameOn",1246,G__Dict_473_0_105, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBatchOn",971,G__Dict_473_0_106, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBatchOn",959,G__Dict_473_0_107, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvNumber",1104,G__Dict_473_0_108, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvNumber",1092,G__Dict_473_0_109, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvent",814,G__Dict_473_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__Dict_473_0_111, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getygainlow",1162,G__Dict_473_0_112, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getygainhigh",1240,G__Dict_473_0_113, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__Dict_473_0_114, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_473_0_115, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WFGUI::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_473_0_116, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WFGUI::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_473_0_117, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WFGUI::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_473_0_118, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WFGUI::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_473_0_122, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_473_0_123, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WFGUI::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_473_0_124, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WFGUI::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_473_0_125, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WFGUI::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_473_0_126, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WFGUI::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~WFGUI", 512, G__Dict_473_0_127, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPotentials(void) {
   /* Potentials */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_Potentials));
   G__memfunc_setup("Potentials",1059,G__Dict_474_0_1, 105, G__get_linked_tagnum(&G__DictLN_Potentials), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Potentials",1059,G__Dict_474_0_2, 105, G__get_linked_tagnum(&G__DictLN_Potentials), -1, 0, 4, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"d - - 0 - - d - - 0 - -", "constructor (YMAX,XMAX,pitch,width)", (void*) NULL, 0);
   G__memfunc_setup("Potentials",1059,G__Dict_474_0_3, 105, G__get_linked_tagnum(&G__DictLN_Potentials), -1, 0, 2, 1, 1, 0, 
"i - - 0 - - i - - 0 - -", "constructor (YMAX,XMAX)", (void*) NULL, 0);
   G__memfunc_setup("SetV",386,G__Dict_474_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - - d - - 0 - -", "set bias and depletion voltage", (void*) NULL, 0);
   G__memfunc_setup("SetwPotential",1363,G__Dict_474_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"d - - 0 - -", "set weighting potential(i,j)", (void*) NULL, 0);
   G__memfunc_setup("SetdPotential",1344,G__Dict_474_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"d - - 0 - -", "set drift potential(i,j)", (void*) NULL, 0);
   G__memfunc_setup("SetPitchWidthXY",1493,G__Dict_474_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"d - - 0 - - d - - 0 - -", "Set YMAX, XMAX, pitch width", (void*) NULL, 0);
   G__memfunc_setup("Getdpot",727,G__Dict_474_0_8, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - i - - 0 - -", "get drift potential(i,j) ", (void*) NULL, 0);
   G__memfunc_setup("Getwpot",746,G__Dict_474_0_9, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - i - - 0 - -", "get weighting potential(i,j)", (void*) NULL, 0);
   G__memfunc_setup("Getfix",615,G__Dict_474_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - - i - - 0 - -", "get fix matrix (i,j)", (void*) NULL, 0);
   G__memfunc_setup("GetXMAX",606,G__Dict_474_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYMAX",607,G__Dict_474_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getref",605,G__Dict_474_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getmipcharge",1232,G__Dict_474_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setmipcharge",1244,G__Dict_474_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getvbias",821,G__Dict_474_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getpitch",824,G__Dict_474_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBoundaryConditions",2186,G__Dict_474_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "set strips/backplane to bias voltage/zero, depending on doping", (void*) NULL, 0);
   G__memfunc_setup("Restriktor",1081,G__Dict_474_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", "method to restrict potentials to a coarser grid, with XMAX/2+1", (void*) NULL, 0);
   G__memfunc_setup("FixRestriktor",1376,G__Dict_474_0_20, 73, -1, -1, 2, 0, 1, 1, 0, "", "method to restrict fix matrix to coarser grid", (void*) NULL, 0);
   G__memfunc_setup("Prolongation",1276,G__Dict_474_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", "method to prolongate potentials to finer grid with XMAX*2-1", (void*) NULL, 0);
   G__memfunc_setup("Iteration",943,G__Dict_474_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - -", "method for iterative calculation ", (void*) NULL, 0);
   G__memfunc_setup("Multigrid",945,G__Dict_474_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - -", "method for multigrid calculation", (void*) NULL, 0);
   G__memfunc_setup("DriftPal",790,G__Dict_474_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", "Color palette for driftfield (linear)", (void*) NULL, 0);
   G__memfunc_setup("WeightPal",901,G__Dict_474_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", "Color palette for weighting field (linear)", (void*) NULL, 0);
   G__memfunc_setup("SetDoping",909,G__Dict_474_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"b - - 0 - - b - - 0 - -", "method to set doping of strips and bulk", (void*) NULL, 0);
   G__memfunc_setup("GetDoping",897,G__Dict_474_0_27, 98, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAbove",793,G__Dict_474_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", "method to set alpha particles coming from above", (void*) NULL, 0);
   G__memfunc_setup("GetAbove",781,G__Dict_474_0_29, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_474_0_30, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Potentials::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_474_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Potentials::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_474_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Potentials::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_474_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Potentials::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Dict_474_0_34, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Dict_474_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Dict_474_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_474_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_474_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Potentials::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_474_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Potentials::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_474_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Potentials::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_474_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Potentials::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Potentials", 1059, G__Dict_474_0_42, (int) ('i'), G__get_linked_tagnum(&G__DictLN_Potentials), -1, 0, 1, 1, 1, 0, "u 'Potentials' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Potentials", 1185, G__Dict_474_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_474_0_44, (int) ('u'), G__get_linked_tagnum(&G__DictLN_Potentials), -1, 1, 1, 1, 1, 0, "u 'Potentials' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncField(void) {
   /* Field */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_Field));
   G__memfunc_setup("Field",484,G__Dict_475_0_1, 105, G__get_linked_tagnum(&G__DictLN_Field), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFieldx",892,G__Dict_475_0_2, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFieldy",893,G__Dict_475_0_3, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Getabs",598,G__Dict_475_0_4, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setabs",610,G__Dict_475_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetField",784,G__Dict_475_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_475_0_7, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Field::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_475_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Field::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_475_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Field::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_475_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Field::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Dict_475_0_11, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Dict_475_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Dict_475_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_475_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_475_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Field::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_475_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Field::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_475_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Field::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_475_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Field::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Field", 484, G__Dict_475_0_19, (int) ('i'), G__get_linked_tagnum(&G__DictLN_Field), -1, 0, 1, 1, 1, 0, "u 'Field' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Field", 610, G__Dict_475_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_475_0_21, (int) ('u'), G__get_linked_tagnum(&G__DictLN_Field), -1, 1, 1, 1, 1, 0, "u 'Field' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCarriers(void) {
   /* Carriers */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_Carriers));
   G__memfunc_setup("Carriers",827,G__Dict_476_0_1, 105, G__get_linked_tagnum(&G__DictLN_Carriers), -1, 0, 0, 1, 1, 0, "", "carrier constructor", (void*) NULL, 0);
   G__memfunc_setup("Getx",408,G__Dict_476_0_2, 100, -1, -1, 0, 0, 1, 1, 0, "", "returns x position of carrier", (void*) NULL, 0);
   G__memfunc_setup("Gety",409,G__Dict_476_0_3, 100, -1, -1, 0, 0, 1, 1, 0, "", "returns y position of carrier", (void*) NULL, 0);
   G__memfunc_setup("Setx",420,G__Dict_476_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", "set x position of carrier", (void*) NULL, 0);
   G__memfunc_setup("Sety",421,G__Dict_476_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", "set y position of carrier", (void*) NULL, 0);
   G__memfunc_setup("Setinside",936,G__Dict_476_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", "set inside ", (void*) NULL, 0);
   G__memfunc_setup("Getinside",924,G__Dict_476_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", "returns inside ", (void*) NULL, 0);
   G__memfunc_setup("Setetheta",935,G__Dict_476_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", "set lorentz angle of electrons", (void*) NULL, 0);
   G__memfunc_setup("Seththeta",938,G__Dict_476_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", "set lorentz angle of holes", (void*) NULL, 0);
   G__memfunc_setup("Getetheta",923,G__Dict_476_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", "returns lorentz angle of electrons", (void*) NULL, 0);
   G__memfunc_setup("Geththeta",926,G__Dict_476_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", "returns lorentz angle of holes", (void*) NULL, 0);
   G__memfunc_setup("SetGainPart",1090,G__Dict_476_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - -", "sets particle as gain particle", (void*) NULL, 0);
   G__memfunc_setup("GetGainPart",1078,G__Dict_476_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", "returns is gain particle", (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__Dict_476_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__Dict_476_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVx",506,G__Dict_476_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVy",507,G__Dict_476_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVx",494,G__Dict_476_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVy",495,G__Dict_476_0_19, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLeftovergain",1554,G__Dict_476_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeftovergain",1542,G__Dict_476_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Carriers", 827, G__Dict_476_0_22, (int) ('i'), G__get_linked_tagnum(&G__DictLN_Carriers), -1, 0, 1, 1, 1, 0, "u 'Carriers' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Carriers", 953, G__Dict_476_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_476_0_24, (int) ('u'), G__get_linked_tagnum(&G__DictLN_Carriers), -1, 1, 1, 1, 1, 0, "u 'Carriers' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__DictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__DictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__DictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__DictLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__DictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__DictLN_TGButtonGroup = { "TGButtonGroup" , 99 , -1 };
G__linked_taginfo G__DictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__DictLN_TGRadioButton = { "TGRadioButton" , 99 , -1 };
G__linked_taginfo G__DictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__DictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__DictLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__DictLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__DictLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__DictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__DictLN_WFGUI = { "WFGUI" , 99 , -1 };
G__linked_taginfo G__DictLN_Potentials = { "Potentials" , 99 , -1 };
G__linked_taginfo G__DictLN_Field = { "Field" , 99 , -1 };
G__linked_taginfo G__DictLN_Carriers = { "Carriers" , 99 , -1 };
G__linked_taginfo G__DictLN_TGHProgressBar = { "TGHProgressBar" , 99 , -1 };
G__linked_taginfo G__DictLN_TGComboBox = { "TGComboBox" , 99 , -1 };
G__linked_taginfo G__DictLN_TEllipse = { "TEllipse" , 99 , -1 };
G__linked_taginfo G__DictLN_ParticleRadioButtonStatus_enum = { "ParticleRadioButtonStatus_enum" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TClass.tagnum = -1 ;
  G__DictLN_TBuffer.tagnum = -1 ;
  G__DictLN_TMemberInspector.tagnum = -1 ;
  G__DictLN_TObject.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TQObject.tagnum = -1 ;
  G__DictLN_TGWindow.tagnum = -1 ;
  G__DictLN_TGObject.tagnum = -1 ;
  G__DictLN_TGFrame.tagnum = -1 ;
  G__DictLN_TGCompositeFrame.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TGTextButton.tagnum = -1 ;
  G__DictLN_TGVerticalFrame.tagnum = -1 ;
  G__DictLN_TGHorizontalFrame.tagnum = -1 ;
  G__DictLN_TGMainFrame.tagnum = -1 ;
  G__DictLN_TGGroupFrame.tagnum = -1 ;
  G__DictLN_TGTextEntry.tagnum = -1 ;
  G__DictLN_TGButtonGroup.tagnum = -1 ;
  G__DictLN_TGCheckButton.tagnum = -1 ;
  G__DictLN_TGRadioButton.tagnum = -1 ;
  G__DictLN_TGNumberEntry.tagnum = -1 ;
  G__DictLN_TCanvas.tagnum = -1 ;
  G__DictLN_TH1F.tagnum = -1 ;
  G__DictLN_TThread.tagnum = -1 ;
  G__DictLN_TGLabel.tagnum = -1 ;
  G__DictLN_TGTab.tagnum = -1 ;
  G__DictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TLine.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TH2F.tagnum = -1 ;
  G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TGraph.tagnum = -1 ;
  G__DictLN_WFGUI.tagnum = -1 ;
  G__DictLN_Potentials.tagnum = -1 ;
  G__DictLN_Field.tagnum = -1 ;
  G__DictLN_Carriers.tagnum = -1 ;
  G__DictLN_TGHProgressBar.tagnum = -1 ;
  G__DictLN_TGComboBox.tagnum = -1 ;
  G__DictLN_TEllipse.tagnum = -1 ;
  G__DictLN_ParticleRadioButtonStatus_enum.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__DictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__DictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__DictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__DictLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__DictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__DictLN_TGButtonGroup);
   G__get_linked_tagnum_fwd(&G__DictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__DictLN_TGRadioButton);
   G__get_linked_tagnum_fwd(&G__DictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__DictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__DictLN_TThread);
   G__get_linked_tagnum_fwd(&G__DictLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__DictLN_TGTab);
   G__get_linked_tagnum_fwd(&G__DictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TLine);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_WFGUI),sizeof(WFGUI),-1,324608,"muss auskommentiert sein wenn .x ... .cxx+",G__setup_memvarWFGUI,G__setup_memfuncWFGUI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_Potentials),sizeof(Potentials),-1,296192,(char*)NULL,G__setup_memvarPotentials,G__setup_memfuncPotentials);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_Field),sizeof(Field),-1,263424,(char*)NULL,G__setup_memvarField,G__setup_memfuncField);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_Carriers),sizeof(Carriers),-1,263424,(char*)NULL,G__setup_memvarCarriers,G__setup_memfuncCarriers);
   G__get_linked_tagnum_fwd(&G__DictLN_TGHProgressBar);
   G__get_linked_tagnum_fwd(&G__DictLN_TGComboBox);
   G__get_linked_tagnum_fwd(&G__DictLN_TEllipse);
   G__get_linked_tagnum_fwd(&G__DictLN_ParticleRadioButtonStatus_enum);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

